<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=1024" />
  <title>University of Wolverhampton Open Day</title>
  <link rel="stylesheet" href="../admin_styles/admin_style.css" />
  <script>
    // Sanitize input to prevent XSS
    function sanitizeInput(input) {
      return input.replace(/[<>]/g, "").trim();
    }

    document.addEventListener('DOMContentLoaded', () => {
      // Logout logic
      const logoutButton = document.getElementById('logout-button');
      if (logoutButton) {
        logoutButton.addEventListener('click', () => {
          fetch('../../v2/logout.php', { method: 'POST' })
            .then(response => response.json())
            .then(data => {
              if (data.Success) {
                window.location.href = 'admin_login.php';
              } else {
                alert(`Logout failed: ${data.message}`);
              }
            })
            .catch(error => {
              console.error('Logout error:', error);
              alert('An error occurred while logging out.');
            });
        });
      }

      // Admin registration logic
      const form = document.getElementById('admin-register-form');
      form.addEventListener('submit', async (event) => {
        event.preventDefault();

        const username = sanitizeInput(document.getElementById('username').value);
        const password = sanitizeInput(document.getElementById('password').value);
        const confirmPassword = sanitizeInput(document.getElementById('confirm-password').value);
        const secretu = sanitizeInput(document.getElementById('secretu').value);
        const secretp = sanitizeInput(document.getElementById('secretp').value);

        const passwordRegex = /^(?=.*[A-Z])(?=.*\d)[A-Za-z\d]{8,15}$/;

        if (!username || !password || !confirmPassword || !secretu || !secretp) {
          alert("Please fill in all fields.");
          return;
        }

        if (!passwordRegex.test(password)) {
          alert("Password must be 8â€“15 characters long, alphanumeric, include one capital letter and one number.");
          return;
        }

        if (password !== confirmPassword) {
          alert("Passwords do not match.");
          return;
        }

        const formData = new FormData();
        formData.append("username", username);
        formData.append("password", password);
        formData.append("secretu", secretu);
        formData.append("secretp", secretp);

        try {
          const response = await fetch("../../v2/register.php", {
            method: "POST",
            body: formData
          });

          if (!response.ok) {
            throw new Error("Network error: Unable to reach server.");
          }

          const result = await response.json();

          if (result.Success) {
            alert("Admin registered successfully!");
            window.location.href = 'admin_login.php';
          } else {
            alert(result.Message);
          }
        } catch (error) {
          alert("ERROR: " + error.message);
        }
      });
    });
  </script>
</head>
<body>
  <header>
    <img src="../../images/UoW logo.svg" alt="University of Wolverhampton Logo" />
  </header>

  <main class="container">
    <section class="left-column">
      <nav>
        <h3><a href="admin_courses.php">Courses</a></h3>
        <p>View, edit and delete existing courses, or add new courses.</p>
        <h3><a href="admin_venues.php">Venues</a></h3>
        <p>View Venues</p>
        <h3><a href="admin_users.php">Users</a></h3>
        <p>View, and delete users</p>
        <h3><a href="admin_update_code.php">Register Code</a></h3>
        <p>View, and update the register code.</p>
        <h3><a href="admin_register_new.php">Register New Admin</a></h3>
        <p>Register new admins</p>
      </nav>
      <button id="logout-button">Logout</button>
    </section>

    <section class="main-content">
      <h1>Register a new Admin</h1>
      <form id="admin-register-form">
        <label for="username">Username</label>
        <input type="text" name="username" id="username" required />

        <label for="password">Password</label>
        <input type="password" name="password" id="password" required />

        <label for="confirm-password">Confirm Password</label>
        <input type="password" id="confirm-password" required />

        <label for="secretu">Secret Username</label>
        <input type="text" name="secretu" id="secretu" required />

        <label for="secretp">Secret Password</label>
        <input type="password" name="secretp" id="secretp" required />

        <button type="submit" class="blue-button">Register Admin</button>
      </form>
    </section>
  </main>
</body>
</html>
